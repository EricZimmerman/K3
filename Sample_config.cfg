# BTT SKRat 1.0
# Supernova for XYZE w/ Blackpill
# Flashing Supernova: sudo dfu-util -d ,2e3c:df11 -R -a 0 -D insert_firmware_here.bin --dfuse-address 0x08000000:leave
# |------------------------|
# |        BACKPACK        |
# |------------------------|
# | Y  |    | Z1 |    | X1 |
# |-----    ------    -----|
# |                        |
# | ------          ------ |
# | | Z  |          | Z2 | |
# | ------          ------ |
# |-----              -----|
# | X  |              | Y1 |
# |------------------------|

[include /home/pi/klipper_config/extras/*.cfg]
[include mainsail.cfg]
[include bedFans.cfg]
[include K-ShakeTune/*.cfg]

# MCU - SKRat 1.0
[mcu]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_2E0007000D504B4633373520-if00
restart_method: command

# MCU - ANNEX Supernova #1 - XY Axis Motors
# STM32 Blackpill (stm32f103xe)
[mcu supernovaxy]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_507A150000C0542810879007-if00
restart_method: command

# MCU - ANNEX Supernova #2 - Z Axis Motors
# STM32 Blackpill (stm32f103xe)
[mcu supernovaz]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_4F7A150000C0542810878D07-if00
restart_method: command

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_3D10AC094E5737374D202020FF0F0D14-if00
x_offset: -26.5  #not sure where this measures to -- from the nozzle tip to center of f/b of beacon?
y_offset: 0

# # MCU - Crampon Nozzle Accelerometer
# [mcu crampon]
# serial: /dev/serial/by-id/usb-Klipper_stm32l412xx_2F001F000850305230353720-if00
# not sure if I will end up using this accelerometer or not

# Printer
[printer]
kinematics: cartesian
max_velocity: 1200
max_accel_to_decel: 25000  
max_accel: 25000
max_z_velocity: 75 
max_z_accel: 2000
square_corner_velocity: 50

[resonance_tester]
accel_chip: beacon
probe_points: 90, 90, 20
accel_per_hz: 125  # default is 75 - ended up using 150 for final values

[input_shaper]
shaper_freq_x: 86.4 #29100 max accel
shaper_type_x: zv
shaper_freq_y: 83.8 #20700 max accel
shaper_type_y: mzv

# # Crampon ADXL345 Settings
# [adxl345]
# cs_pin: crampon:PA4
# spi_bus: spi1
# spi_speed: 8000000
# ##spi_software_mosi_pin: PB5
# ##spi_software_miso_pin: PA6
# ##spi_software_sclk_pin: PB3
# [static_digital_output crampon_led]
# pins: !crampon:PA15

# Enable stuff
[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[force_move]
enable_force_move: true

[pause_resume]

[display_status]

[respond]

[exclude_object]

#################################################
#Supernova Pinout ###
#################################################

#function,rp2040,blackpill
#stepper1-diag,gp0,pb12
#stepper1-dir,gp1,pb13
#stepper1-step,gp2,pb14
#stepper1-en,gp3,pb15

#stepper2-dir,gp4,pa8
#stepper2-step,gp5,pa9
#stepper2-en,gp6,pa10
#stepper2-diag,gp7,pa15

#stepper3-diag,gp9,pb10
#stepper3-dir,gp10,pb4
#stepper3-step,gp11,pb5
#stepper3-en,gp12,pb6

#stepper4-dir,gp13,pb7
#stepper4-step,gp14,pb8
#stepper4-en,gp15,pb9
#stepper4-diag,gp8,pb3

#miso,gp16,pa6
#sck,gp18,pa5
#mosi,gp19,pa7

#cs-uart4,gp20,pa1
#cs-uart3,gp21,pa2
#cs-uart2,gp22,pa4
#cs-uart1,gp26,pb0

#misc1,gp28,pa3
#misc2,gp27,pb1
#misc3,gp17,pa0
#misc4-run,pb2

#################################################
# TMC Stepper Settings
#################################################

# Steppers
[stepper_x]
# connected to Motor 4
step_pin: supernovaxy:PB8
dir_pin: supernovaxy:PB7
enable_pin: !supernovaxy:PB9
rotation_distance: 40
microsteps: 256
full_steps_per_rotation: 200
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: -9
position_endstop: 180
position_max: 180
homing_speed: 80
homing_retract_dist: 0

[stepper_x1]
# connected to Motor 1
step_pin: supernovaxy:PB14
dir_pin: !supernovaxy:PB13
enable_pin: !supernovaxy:PB15
rotation_distance: 40
microsteps: 256
full_steps_per_rotation: 200
endstop_pin: tmc5160_stepper_x1:virtual_endstop

[stepper_y]
# connected to Motor 2
step_pin: supernovaxy:PA9
dir_pin: !supernovaxy:PA8
enable_pin: !supernovaxy:PA10
rotation_distance: 40
microsteps: 256
full_steps_per_rotation: 200
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_min: 0
position_endstop: 0
position_max: 184.5 #still have room to go - maybe 3-4mm
homing_speed: 80
homing_retract_dist: 0

[stepper_y1]
# connected to Motor 3
step_pin: supernovaxy:PB5
dir_pin: supernovaxy:PB4
enable_pin: !supernovaxy:PB6
rotation_distance: 40
microsteps: 256
full_steps_per_rotation: 200
endstop_pin: tmc5160_stepper_y1:virtual_endstop

#########################

[stepper_z]
# connected to Motor 1
step_pin: supernovaz:PB14
dir_pin: supernovaz:PB13
enable_pin: !supernovaz:PB15
full_steps_per_rotation: 200
rotation_distance: 40
microsteps: 64
gear_ratio: 5:1
endstop_pin: probe:z_virtual_endstop
position_max: 181
position_min: -1
homing_speed: 50
homing_retract_dist: 0

[stepper_z1]
# connected to MOTOR 2
step_pin: supernovaz:PA9
dir_pin: supernovaz:PA8
enable_pin: !supernovaz:PA10
full_steps_per_rotation: 200
microsteps: 64
rotation_distance: 40
gear_ratio: 5:1

[stepper_z2]
# connected to MOTOR 3
step_pin: supernovaz:PB5
dir_pin: !supernovaz:PB4
enable_pin: !supernovaz:PB6
full_steps_per_rotation: 200
microsteps: 64
rotation_distance: 40
gear_ratio: 5:1

#################################################
# TMC Stepper Driver Settings
#################################################

[tmc5160 stepper_x]
spi_bus: spi1
cs_pin: supernovaxy:PA1
sense_resistor: 0.075
diag1_pin: ^!supernovaxy:PB3
interpolate: false
run_current: 2.5
driver_SGT: 2

[tmc5160 stepper_x1]
spi_bus: spi1
cs_pin: supernovaxy:PB0
sense_resistor: 0.075
diag1_pin: ^!supernovaxy:PB12
driver_SGT: 2
interpolate: false
run_current: 2.5

[tmc5160 stepper_y]
spi_bus: spi1
cs_pin: supernovaxy:PA4
sense_resistor: 0.075
diag1_pin: ^!supernovaxy:PA15
interpolate: false
run_current: 2.5
driver_SGT: 2

[tmc5160 stepper_y1]
spi_bus: spi1
cs_pin: supernovaxy:PA2
sense_resistor: 0.075
diag1_pin: ^!supernovaxy:PB10  
interpolate: false
run_current: 2.5
driver_SGT: 2

###################################

[tmc5160 stepper_z]
spi_bus:spi1
cs_pin: supernovaz:PB0
diag1_pin: ^!supernovaz:PB12
interpolate: False
run_current: 1.1
sense_resistor: 0.075

[tmc5160 stepper_z1]
spi_bus:spi1
cs_pin: supernovaz:PA4
diag1_pin: ^!supernovaz:PA15
interpolate: False
run_current: 1.1
sense_resistor: 0.075

[tmc5160 stepper_z2]
spi_bus:spi1
cs_pin: supernovaz:PA2
diag1_pin: ^!supernovaz:PB10
interpolate: False
run_current: 1.1
sense_resistor: 0.075

[tmc5160 extruder]
# connected to M4 Stepper on Supernovaz
spi_bus:spi1
cs_pin: supernovaz:PA1
diag1_pin: ^!supernovaz:PB3
interpolate: False
run_current: 0.35
sense_resistor: 0.075


# Extruder
[extruder]
# connected to M4 Stepper on Supernova Z board
step_pin: supernovaz:PB8
dir_pin: supernovaz:PB7
enable_pin: !supernovaz:PB9
#rotation_distance: 22.67895 # Value from official config
rotation_distance: 22.5655
gear_ratio: 50:8
microsteps: 16
full_steps_per_rotation: 200 #1.8deg Motor

#MosqPT1000
sensor_type:PT1000
sensor_pin: PA3
#spi_bus: spi1
#rtd_nominal_r: 100
#rtd_reference_r: 430
#rtd_num_of_wires: 2

heater_pin: PE13
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.025
pressure_advance_smooth_time: 0.03
max_extrude_cross_section: 2
max_extrude_only_distance: 200
smooth_time: .3
#control: pid
#pid_Kp=22.538
#pid_Ki=1.322
#pid_Kd=96.068
min_temp: 0
max_temp: 350
max_extrude_only_accel: 1500


# Heated Bed
[heater_bed]
# fabreeko 300w bed wired in parallel to ssr
heater_pin: PE11
# NTC 100K MGB18-104F39050L32 is for Keenovo thermistors
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PB2
smooth_time: 3.0
#control: pid
#pid_Kp: 42.475 
#pid_Ki: 1.395 
#pid_Kd: 323.339
min_temp: 0
max_temp: 120
max_power: 0.8



#######################################################
######### FANS
#######################################################


# Fans
# hotend fan (thermally controlled)
[heater_fan hotend_fan]
pin: PD15
fan_speed: 1.0
kick_start_time: 0.500
heater: extruder
heater_temp: 50.0

# print cooling fan
[fan]
pin: PD14
kick_start_time: 0.500
off_below: 0.10

# Nevermore Micro
[heater_fan nevermore_micro]
pin: PD13
kick_start_time: 0.500
heater: heater_bed
heater_temp: 75.0
fan_speed: 0.7

[controller_fan electronics_fan1]
pin: PE14
tachometer_pin: ^PD10
max_power: 1.0
off_below: 0.1
fan_speed: 1.0
idle_speed: 0.5
cycle_time: 0.00004
hardware_pwm: true
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2
heater: heater_bed

[controller_fan electronics_fan2]
pin: PE9
#tachometer_pin: ^PA11 #official pinout says this is correct, but get errors for PA11 being used for USB
max_power: 1.0
off_below: 0.1
fan_speed: 1.0
idle_speed: 0.5
cycle_time: 0.00004
hardware_pwm: true
stepper: stepper_x, stepper_y, stepper_z, stepper_z1, stepper_z2
heater: heater_bed

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor skrat]
sensor_type: temperature_mcu

[temperature_sensor Chamber]
sensor_type: Generic 3950
sensor_pin: PA2
min_temp: 0
max_temp: 100
gcode_id: C


## Chamber Lighting - HE2 Connector (Optional)
[output_pin caselight]
pin: PB3
pwm:true
shutdown_value: 0
value:0.5
cycle_time: 0.01


# Both Chamberheaters
#[multi_pin c_heater]
#pins: PA1, PB11

# Sensors
# chamber thermistor
#[temperature_fan chamber_heater]
#sensor_type: 100k3950_airtemp
#sensor_pin: PF5
#min_temp: 0
#max_temp: 100
#gcode_id: C
#pin: multi_pin:c_heater
#target_temp: 0
#min_speed: 0
#min_temp: 0
#max_temp: 130
#shutdown_speed: 0
#control: pid
#pid_Kp: 2.0
#pid_Ki: 5.0
#pid_Kd: 0.5
#reverse:true


# Mesh Bed Settings
[bed_mesh]
zero_reference_position: 90, 90
speed: 350
#mesh_main_direction: x
#mesh_runs: 2
#horizontal_move_z: 1
mesh_min: 25,20
mesh_max: 150,160
probe_count: 25,25
#fade_start: 1.0
#fade_end: 10.0
#move_check_distance: 3
#split_delta_z: .005
#mesh_pps: 0,0
algorithm: bicubic
bicubic_tension: 0.2


[safe_z_home]
home_xy_position: 90, 90 
z_hop: 3

# Z Tilt Bed Adjustment Settings
[z_tilt]
# these positions assume the bed and rear rail are shifted 12mm to the right from what is in the edrawing
# reorde

    -74.0, -18.0    # Front Left
    76.0,  217.0    # Rear
    226.0, -18.0    # Front Right

points:
    41.5, 20         # Front Left
    97.5, 160        # Rear
    171.5, 20        # Front Right

Speed: 300
horizontal_move_z: 5.0
retries: 8
retry_tolerance: 0.02


# Idle timeout
[idle_timeout]
# only turn off motors and heaters if the printer is not paused
gcode:
    {% if not (printer.pause_resume.is_paused) %}
        TURN_OFF_HEATERS
        M84
        ;SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=hotend_fan TARGET=45
        SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber_heater TARGET=0

    {% endif %}
timeout: 1800


########################################
# MACROS
########################################

[gcode_macro pre_print_prep]
gcode:
    chamber_lighting_on ;turn on lighting
    abs_warmup_temp ;tell bed to warm up
    Z_TILT_ADJUST	;adjust bed so its square to gantry
    BED_MESH_CALIBRATE ;Run Bed Mesh

#	macro to level the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
    Z_TILT_ADJUST	;adjust bed so its square to gantry
    
#	macro to level bed to the gantry
[gcode_macro square_bed_to_machine]
gcode:
    G32	;adjust bed so its square to gantry

#	mesh bed level the machine
[gcode_macro mesh_bed_level_machine]
gcode:
    BED_MESH_CALIBRATE	;Run Bed Mesh

#	combined print start gcode macro that takes into account temperature from the slicer
[gcode_macro print_start]
# params:
#   EXTRUDER
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(260) %}
    {% set BED = params.BED|default(110) %}

    print_start_1			;print start macro 1
    M140 S{BED}			;set bed temperature and wait
    M109 S{EXTRUDER}		;set hotend temperature and wait
    M190 S{BED}			;set bed temperature and do not wait
    print_start_2			;print start macro 2
    prime_line_regular	;draw prime line in corner of bed

[gcode_macro print_start_1]
gcode:
    M104 S0 #cancel set temp
    M107 #turn cooling fans off
    G21  # set units to mm
    G90  # use absolute coordinates
    M83	# use relative extrusion
    G92 E0.0  # reset e count
    M220 S100 # reset speed multiplier
    Go_To_Purge_Location	#move to nozzle scrubber bucket

[gcode_macro print_start_2]
gcode:
    nozzle_clean		#clean nozzle
    
[gcode_macro prime_line_regular]
gcode:
    G1 Z20 F6000
    G1 X10 Y10 F12000
    G1 Z0.5 F600
    G1 Y105 E10 F1000
    G1 Y115 E2.5 F1000
    G92 E0.0             ;set extruder to Zero
    G92 Z0.5             ;let printer know its at 0.5
    G90                  ;set to absolute

#    Use print_end for your slicer ending script 
[gcode_macro print_end]
variable_x_retract:         2       # distance to move x on initial move away from print
variable_y_retract:         2       # distance to move y on initial move away from print
variable_z_retract:         1       # distance to lift z on initial move away from print
variable_z_min:             130     # minimum z height to end at
variable_z_lift:            10      # minimum distance to lift z on final move
variable_x_end:             160     # x position to end at
variable_y_end:             180     # y position to end at
variable_heatbed_off:       True    # whether or not to turn off heatbed
variable_motors_off:        False    # whether or not to turn off motors
gcode:
    {% set x_mid = printer.toolhead.axis_maximum.x / 2 %}
    {% set y_mid = printer.toolhead.axis_maximum.y / 2 %}
    {% set z_max = printer.toolhead.axis_maximum.z %}

    # get x retract distance
    {% if printer.toolhead.position.x < x_mid %}
        {% set x_dist = x_retract|abs %}
    {% else %}
        {% set x_dist = -(x_retract|abs) %}
    {% endif %}
    
    # get y retract distance
    {% if printer.toolhead.position.y < y_mid %}
        {% set y_dist = y_retract|abs %}
    {% else %}
        {% set y_dist = -(y_retract|abs) %}
    {% endif %}
    
    # get z retract distance
    {% if printer.toolhead.position.z + z_retract < z_max %}
        {% set z_dist = z_retract %}
    {% else %}
        {% set z_dist = z_max - printer.toolhead.position.z %}
    {% endif %}

    SAVE_GCODE_STATE NAME=END_state

    # disengage from print
    M83                                     # relative extrusion
    G91                                     # relative positioning
    G1 E-0.3 F4800                          # retract 0.3mm of filament
    G1 X{x_dist} Y{y_dist} Z{z_dist} F6000  # short quick move to disengage from print
    G90                                     # absolute positioning

    Go_To_Purge_Location    # move over bucket
    G0 E10 F400             # extrude filament to get better blob on end
    G0 E-0.5 F1800          # retract additional filament to move out of melt zone
    Wipe_Nozzle             # wipe nozzle

    M104 S0                 # turn off hotend
    {% if heatbed_off %}
        M140 S0             # turn off heatbed
    {% endif %}

    # move to x and y ending positions
    G1 X{x_end} Y{y_end}

    # move to z ending position
    {% if printer.toolhead.position.z + z_lift < z_min %}
        G1 Z{z_min}
    {% elif printer.toolhead.position.z + z_lift < z_max %}
        G91
        G1 Z{z_lift}
        G90
    {% else %}
        G1 Z{z_max}
    {% endif %}

    RESTORE_GCODE_STATE NAME=END_state

    M107                    # turn off part cooling fans
    {% if motors_off %}
        M84                 # turn off motors
    {% endif %}
    CLEAR_PAUSE             # clear pause state in case it was enabled

#	Macro to execute when pausing printer
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

#	Macro to execute when resuming printer
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

#	Macro to execute when canceling a print
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    print_end #execute the print end macro
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#	Notify when ABS Timer is complete
[delayed_gcode notify_chamber]
initial_duration: 0
gcode:
    {gcode.action_respond_info("action:prompt_begin Chamber Preheated")}
    {action_respond_info("action:prompt_choice OK")}
    {action_respond_info("action:prompt_show")}

#	Set Temps for chamber warmup when printing with abs 
[gcode_macro abs_warmup_temp]
# params:
    # TEMP
gcode:
    {% set TEMP = params.TEMP|default(110) %}

    M106 S255					#turn part cooling fan on to blow heat around chamber
    M190 S{TEMP}				#set bed temperature and wait
    G28							#home machine
    G0 X90 Y90 Z20 F3000		#move to center of bed
    UPDATE_DELAYED_GCODE ID=notify_chamber DURATION=1200

#	Notify when filament is unloaded and ready to reload
[delayed_gcode notify_extruder_reload]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin Ready to Load Filament")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Load Filament
[gcode_macro load_filament]
# params:
#   EXTRUDER
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(260) %}

    turn_fans_off			#turn part cooling fans off
    G0 X10 Y40 F18000		#move to area where can easily load filament
    {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
        # do nothing
    {% elif printer.toolhead.position.z|float >= 50|float %}    #if z position >= 50mnm do the following
        #do nothing
    {% else %}  		 #if you dont meet any of the criteria
        G90              #absolute positioning
        G1 Z50 F600     #move z to 50mm
    {% endif %}
    M109 S{EXTRUDER}		#set hotend temperature and wait
    M83						#relative positioning on extruder	
    G0 E120 F400  			#prime extruder
    M109 S0					#turn off extruder
    UPDATE_DELAYED_GCODE ID=notify_extruder_load DURATION=10

#	Notify when filament is loaded
[delayed_gcode notify_extruder_load]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin FIlament is Loaded")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Unload Filament
[gcode_macro unload_filament]
# params:
#   EXTRUDER
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(260) %}

    turn_fans_off			#turn part cooling fans off
    G0 X10 Y40 F18000		#move to area where can easily load filament
    {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
        # do nothing
    {% elif printer.toolhead.position.z|float >= 50|float %}    #if z position >= 50mnm do the following
        #do nothing
    {% else %}  		 #if you dont meet any of the criteria
        G90              #absolute positioning
        G1 Z50 F600     #move z to 50mm
    {% endif %}
    M109 S{EXTRUDER}		#set hotend temperature and wait	
    M83						#relative positioning on extruder
    G0 E5 F400			#extrude filament to get better blob on end
    G0 E-600 F1800  		#retract additional filament to move out of melt zone
    UPDATE_DELAYED_GCODE ID=notify_extruder_reload DURATION=10

#	Scrubs the nozzle on the brass brush or silicone wiper located in the build chamber
[gcode_macro nozzle_clean]
gcode:
    SAVE_GCODE_STATE NAME=clean_nozzle_state	#store current nozzle location
    Wipe_Nozzle
    RESTORE_GCODE_STATE NAME=clean_nozzle_state MOVE=1 #restore current nozzle location

#   Settings for the nozzle wiper
[gcode_macro Nozzle_Wiper_Variables]
# the values below are for a wiper located at (-8, 121)
variable_purge_x:       -8  # x purge location
variable_purge_y:       113 # y purge location
variable_purge_x_entry: 0   # x entry location before going to the purge location
variable_purge_y_entry: 113 # y entry location before going to the purge location
variable_wipe_dx:       0   # distance to move in x from the purge position in order to wipe
variable_wipe_dy:       25  # distance to move in y from the purge position in order to wipe
variable_wipe_count:    2   # number of wipe cycles
variable_travel_speed:  300 # how fast travel speeds will be performed
variable_entry_speed:   100 # how fast to move from the entry location to the purge location
variable_wipe_speed:    50  # how fast to move when wiping
variable_purge_speed:   7   # how fast to extrude in mm/s when purging
variable_purge_fan:     64  # default fan speed out of 255 when purging
variable_wipe_fan:      128 # default fan speed out of 255 when wiping
gcode:

#   Move above the purge bucket
[gcode_macro Go_To_Purge_Location]
gcode:
    {% set Px = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x|float %}
    {% set Py = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y|float %}
    {% set Pxe = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x_entry|float %}
    {% set Pye = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y_entry|float %}
    {% set St = printer["gcode_macro Nozzle_Wiper_Variables"].travel_speed * 60 %}
    {% set Se = printer["gcode_macro Nozzle_Wiper_Variables"].entry_speed * 60 %}

    SAVE_GCODE_STATE NAME=Go_To_Purge_Location_state
    G90

    {% if not (printer.toolhead.position.x == Px and printer.toolhead.position.y == Py) %}
        G1 X{Pxe} Y{Pye} F{St}
        G1 X{Px} Y{Py} F{Se}
    {% endif %}

    RESTORE_GCODE_STATE NAME=Go_To_Purge_Location_state

#   Wipe the nozzle on the brass brush or silicone wiper
[gcode_macro Wipe_Nozzle]
# params:
#   OLD_FAN_SPEED
gcode:
    {% set OLD_FAN_SPEED = params.OLD_FAN_SPEED|default(-1)|int %}
    {% set Px = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x|float %}
    {% set Py = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y|float %}
    {% set Pxe = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x_entry|float %}
    {% set Pye = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y_entry|float %}
    {% set Wdx = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_dx|float %}
    {% set Wdy = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_dy|float %}
    {% set Wc = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_count|int %}
    {% set Se = printer["gcode_macro Nozzle_Wiper_Variables"].entry_speed * 60 %}
    {% set Sw = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_speed * 60 %}
    {% set Sf = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_fan %}
    
    {% if OLD_FAN_SPEED == -1 %}
        {% set old_Sf = printer.fan.speed %}
    {% else %}
        {% set old_Sf = OLD_FAN_SPEED %}
    {% endif %}
    
    {% if printer.fan.speed < Sf %}
        {% set wait_for_fan = True %}
    {% else %}
        {% set wait_for_fan = False %}
    {% endif %}

    SAVE_GCODE_STATE NAME=Wipe_Nozzle_state
    G90

    # go to purge location
    Go_To_Purge_Location

    # set fan speed for wiping
    M106 S{Sf}
    
    # wait for fan to cool filament if needed
    {% if wait_for_fan %}
        G4 P800
    {% endif %}

    # wipe nozzle
    G1 X{Px + Wdx} Y{Py + Wdy} F12000
    {% for i in range(Wc) %}
        G1 X{Px} Y{Py} F{Sw}
        G1 X{Px + Wdx} Y{Py + Wdy} F{Sw}
    {% endfor %}

    # move away from wiper
    G1 X{Pxe + Wdx} Y{Pye + Wdy} F{Se}

    # restore fan speed
    M106 S{(old_Sf * 255)|int}

    RESTORE_GCODE_STATE NAME=Wipe_Nozzle_state

#   Purge material into the bucket
[gcode_macro Purge]
description: Extrude into the purge bucket and wipe the nozzle
# params:
#   EXACT_TEMP:     whether to cool to specified temperature if already above it
#   TEMPERATURE:    minimum extruder temperature before purging
#   FEED_AMOUNT:    length of material in mm to purge
#   MAX_FEED:       max extrude length for a single purge strip. Set to -1 to disable length limit.
gcode:
    {% set EXACT_TEMP = params.EXACT_TEMP|default(False) %}
    {% set TEMPERATURE = params.TEMPERATURE|default(230.0)|float %}
    {% set FEED_AMOUNT = params.FEED_AMOUNT|default(15.0)|float %}
    {% set MAX_FEED = params.MAX_FEED|default(8.0)|float %}

    {% set Sp = printer["gcode_macro Nozzle_Wiper_Variables"].purge_speed * 60 %}
    {% set Sf = printer["gcode_macro Nozzle_Wiper_Variables"].purge_fan %}
    {% set old_Sf = printer.fan.speed %}

    SAVE_GCODE_STATE NAME=Purge_state

    # make sure FEED_AMOUNT is at least 3 to avoid negative E movements
    {% if FEED_AMOUNT < 3 %}
        {% set FEED_AMOUNT = 3 %}
    {% endif %}
    
    # go to purge location
    Go_To_Purge_Location

    # wait for hotend
    {% if EXACT_TEMP|lower == 'true' or printer.extruder.temperature < TEMPERATURE %}
        M109 S{TEMPERATURE}
    {% endif %}

    # set fan speed for purging
    M106 S{Sf}

    # relative extrusion
    M83

    # if extrude length is unlimited, purge a single strip
    {% if MAX_FEED == -1 %}
        # extrude
        G1 E{FEED_AMOUNT - 3} F{Sp}
        G1 E3 F100

    # else purge multiple smaller strips
    {% else %}
        {% for i in range(((FEED_AMOUNT - 3) / MAX_FEED)|int) %}
            # go to purge location
            Go_To_Purge_Location
            
            # extrude
            G1 E{MAX_FEED - 3} F{Sp}
            G1 E3 F100

            # wait
            G4 P800

            # wipe the nozzle
            Wipe_Nozzle OLD_FAN_SPEED={Sf}
        {% endfor %}

        # purge remainder
        {% set remainder = (FEED_AMOUNT - 3)|int % MAX_FEED|int %}
        Go_To_Purge_Location
        G1 E{remainder} F{Sp}
        G1 E3 F100
    {% endif %}

    # reset E position
    G92 E0.0

    # wait
    G4 P800

    # wipe the nozzle
    Wipe_Nozzle OLD_FAN_SPEED={old_Sf}

    RESTORE_GCODE_STATE NAME=Purge_state

#	Macro for M600 - filament out pause resume 
[gcode_macro M600]
# params:
#   X
#   Y
#   Z
gcode:
    {% set X = params.X|default(40) %}
    {% set Y = params.Y|default(40) %}
    {% set Z = params.Z|default(10) %}

    {% if printer.toolhead.status == "Ready" %}
        # do nothing
    {% else %}
        M117 Filament Change
        SAVE_GCODE_STATE NAME=M600_state
        PAUSE
        G91
        G1 E-5 F4000
        G1 Z{Z}
        G90
        G1 X{X} Y{Y} F3000
        G0 E15 F1800			#extrude filament to get better blob on end
        G0 E-500 F4800  		#retract additional filament to move out of melt zone
        RESTORE_GCODE_STATE NAME=M600_state
    {% endif %}

#	Use this command to load filament during a mid print filament swap	
[gcode_macro SWAP_RESUME] 
gcode:
     M117 Printing...
    LOAD_FILAMENT
    RESUME

#	Macro to Turn Fans Off
[gcode_macro turn_fans_off]
gcode:
    M107

#	Redefine M204 gcode to properly accel_to_decel when called instead of keeping default through the print
[gcode_macro M204]
rename_existing: M204.1
variable_ratio: 1.0     # ratio of accel_to_decel/accel
gcode:

   {% if 'P' in params %}{% set accel = params.P %}{% endif %}
   {% if 'S' in params %}{% set accel = params.S %}{% endif %}
   {% if 'T' in params %}{% set accel = params.T %}{% endif %}

    SET_VELOCITY_LIMIT ACCEL={ accel } ACCEL_TO_DECEL={ accel|float * ratio }

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.059
#*# pid_ki = 1.714
#*# pid_kd = 211.225
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.859
#*# pid_ki = 1.594
#*# pid_kd = 96.950
#*#
#*# [beacon model default]
#*# model_coef = 1.4579082918131556,
#*# 	  1.7644824919723858,
#*# 	  0.7035360350643154,
#*# 	  0.3904659826834059,
#*# 	  0.5670856047831819,
#*# 	  0.36590628418867144,
#*# 	  -0.4532960880914416,
#*# 	  -0.34890420552192225,
#*# 	  0.32637014607617704,
#*# 	  0.230455672884999
#*# model_domain = 1.8528441703904953e-07,1.9437309201756016e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 67.474477
#*# model_offset = 0.07000
#*#
#*# [bed_mesh 110-degrees]
#*# version = 1
#*# points =
#*# 	0.031959, 0.028772, 0.023670, 0.023579, 0.020581, 0.020454, 0.018580, 0.018567, 0.017752, 0.019768, 0.021377, 0.023368, 0.024397, 0.024669, 0.026925, 0.024385, 0.026612, 0.024542, 0.029390, 0.032004, 0.038147, 0.043354, 0.051987, 0.056285, 0.064906
#*# 	0.024701, 0.023835, 0.016226, 0.017480, 0.010003, 0.014349, 0.008866, 0.012729, 0.009120, 0.014631, 0.011616, 0.018552, 0.013417, 0.021760, 0.015101, 0.021083, 0.013841, 0.021034, 0.017133, 0.027711, 0.027252, 0.037885, 0.041120, 0.050384, 0.052693
#*# 	0.017221, 0.016950, 0.009097, 0.012273, 0.003337, 0.008994, 0.002897, 0.007346, 0.002043, 0.009716, 0.006256, 0.014422, 0.010226, 0.017227, 0.012391, 0.016720, 0.012188, 0.016587, 0.015802, 0.023029, 0.025683, 0.032946, 0.038092, 0.045689, 0.049623
#*# 	0.011406, 0.011787, 0.003276, 0.007091, -0.001023, 0.005195, -0.001859, 0.003897, -0.000874, 0.005935, 0.003461, 0.010849, 0.008816, 0.014427, 0.011009, 0.014774, 0.010812, 0.014914, 0.014283, 0.020923, 0.024092, 0.031490, 0.035768, 0.043340, 0.048358
#*# 	0.005105, 0.005967, -0.002298, 0.003232, -0.005748, 0.001924, -0.006528, 0.001063, -0.006687, 0.002936, -0.002631, 0.008247, 0.002926, 0.012471, 0.006282, 0.013463, 0.005211, 0.013981, 0.009294, 0.019888, 0.018247, 0.028794, 0.030173, 0.040453, 0.041288
#*# 	0.001551, 0.001342, -0.007391, -0.001361, -0.010725, -0.001668, -0.010904, -0.002408, -0.009962, -0.000764, -0.005939, 0.003725, -0.001011, 0.009752, 0.004692, 0.010081, 0.003901, 0.012398, 0.010484, 0.018431, 0.017273, 0.026942, 0.029115, 0.038080, 0.040401
#*# 	-0.004547, -0.003001, -0.012868, -0.003899, -0.014864, -0.004964, -0.012556, -0.004923, -0.012282, -0.003833, -0.008135, 0.001006, -0.002294, 0.007985, 0.004156, 0.009421, 0.005123, 0.010483, 0.009644, 0.017837, 0.017766, 0.026502, 0.029095, 0.036292, 0.038964
#*# 	-0.011317, -0.007263, -0.017039, -0.008588, -0.018367, -0.007975, -0.017612, -0.007502, -0.016227, -0.006480, -0.013434, 0.000000, -0.006222, 0.005542, -0.001174, 0.007463, 0.000559, 0.008613, 0.004450, 0.015126, 0.012989, 0.024095, 0.024330, 0.034730, 0.035098
#*# 	-0.013910, -0.012341, -0.019363, -0.012489, -0.021130, -0.011746, -0.019828, -0.011445, -0.017519, -0.009540, -0.013909, -0.004015, -0.007566, 0.001010, -0.001638, 0.005254, -0.000738, 0.006738, 0.005164, 0.012187, 0.013856, 0.021921, 0.024495, 0.032694, 0.035505
#*# 	-0.020238, -0.015371, -0.024185, -0.016198, -0.024790, -0.015635, -0.022473, -0.013980, -0.021828, -0.012065, -0.016371, -0.006601, -0.011159, -0.001012, -0.005868, 0.003433, -0.002667, 0.005489, 0.001281, 0.011340, 0.010677, 0.020678, 0.020872, 0.030971, 0.030774
#*# 	-0.024761, -0.019303, -0.030175, -0.020809, -0.031711, -0.017521, -0.027596, -0.016164, -0.025658, -0.013978, -0.022095, -0.008304, -0.014251, -0.001815, -0.009175, 0.001253, -0.007069, 0.003495, -0.002724, 0.009726, 0.007093, 0.019135, 0.018276, 0.027896, 0.029183
#*# 	-0.027397, -0.024145, -0.031040, -0.024712, -0.031716, -0.022128, -0.028573, -0.019429, -0.024920, -0.017600, -0.021034, -0.011482, -0.014593, -0.004417, -0.007908, -0.000684, -0.004477, 0.001461, -0.000204, 0.008262, 0.008368, 0.017097, 0.018835, 0.027104, 0.029840
#*# 	-0.029720, -0.024875, -0.031665, -0.026220, -0.032016, -0.024605, -0.028767, -0.020043, -0.026992, -0.016149, -0.020136, -0.010852, -0.013189, -0.003163, -0.005546, -0.000057, -0.003391, 0.002475, -0.000412, 0.009203, 0.008238, 0.018197, 0.019214, 0.027292, 0.029920
#*# 	-0.032477, -0.025932, -0.034792, -0.027730, -0.034790, -0.024785, -0.030631, -0.019037, -0.025842, -0.015535, -0.020647, -0.009502, -0.014084, -0.002579, -0.007317, 0.001296, -0.003700, 0.004158, 0.000614, 0.007663, 0.008519, 0.018341, 0.019600, 0.030767, 0.030912
#*# 	-0.034067, -0.027821, -0.035246, -0.029217, -0.035540, -0.027085, -0.027770, -0.022135, -0.024937, -0.017049, -0.019343, -0.010026, -0.010049, -0.002708, -0.004937, 0.001219, -0.000303, 0.003608, 0.004022, 0.008698, 0.009494, 0.017710, 0.022748, 0.029232, 0.033102
#*# 	-0.033905, -0.029749, -0.035163, -0.030430, -0.035694, -0.027406, -0.028909, -0.020919, -0.024390, -0.013777, -0.017643, -0.007213, -0.008563, 0.000812, -0.002001, 0.004861, -0.000188, 0.004835, 0.002416, 0.010222, 0.008936, 0.018074, 0.020953, 0.029405, 0.034033
#*# 	-0.036610, -0.031447, -0.038179, -0.030366, -0.036868, -0.027749, -0.030195, -0.021492, -0.024257, -0.012535, -0.015656, -0.005896, -0.008842, 0.003138, -0.002294, 0.006009, 0.001093, 0.008876, 0.002719, 0.011938, 0.010005, 0.018182, 0.021031, 0.030267, 0.033180
#*# 	-0.036937, -0.033882, -0.039946, -0.034686, -0.036913, -0.031086, -0.028812, -0.021731, -0.022737, -0.013347, -0.012940, -0.006331, -0.005481, 0.001652, 0.000705, 0.005605, 0.004531, 0.007262, 0.007447, 0.011389, 0.013402, 0.020955, 0.024209, 0.031686, 0.034508
#*# 	-0.037007, -0.032580, -0.036301, -0.031688, -0.035489, -0.026448, -0.026765, -0.015240, -0.017467, -0.009296, -0.007369, -0.000186, 0.001167, 0.005681, 0.006021, 0.010329, 0.006945, 0.009834, 0.010575, 0.013177, 0.016556, 0.021687, 0.028202, 0.033159, 0.038976
#*# 	-0.033977, -0.030647, -0.034592, -0.027386, -0.031841, -0.023393, -0.022548, -0.013083, -0.011969, -0.004696, -0.002062, 0.003212, 0.004537, 0.011228, 0.011895, 0.015296, 0.011970, 0.015240, 0.014972, 0.020965, 0.020899, 0.029403, 0.031356, 0.041001, 0.044170
#*# 	-0.028146, -0.026885, -0.028119, -0.027472, -0.026699, -0.022563, -0.016596, -0.010515, -0.006979, -0.000296, 0.004971, 0.007088, 0.010090, 0.015775, 0.018610, 0.020008, 0.019427, 0.019806, 0.021131, 0.023890, 0.026141, 0.032953, 0.036970, 0.042839, 0.049337
#*# 	-0.019383, -0.017344, -0.021404, -0.018189, -0.020464, -0.009823, -0.007657, 0.002782, 0.002208, 0.012534, 0.011799, 0.020952, 0.019013, 0.029619, 0.026061, 0.034109, 0.027036, 0.031205, 0.027906, 0.031008, 0.031775, 0.039771, 0.044325, 0.052036, 0.054858
#*# 	-0.010698, -0.004446, -0.013368, -0.005120, -0.011176, 0.001368, 0.000921, 0.011136, 0.011304, 0.022881, 0.021490, 0.032435, 0.027558, 0.037665, 0.032997, 0.042493, 0.034815, 0.042168, 0.035624, 0.043863, 0.040676, 0.051974, 0.050687, 0.061158, 0.061822
#*# 	-0.001624, -0.003366, -0.005290, -0.003530, -0.004179, 0.002969, 0.006312, 0.012963, 0.017621, 0.025885, 0.029093, 0.033854, 0.034395, 0.039634, 0.041104, 0.045062, 0.040312, 0.047575, 0.043026, 0.050327, 0.046653, 0.056396, 0.056873, 0.066135, 0.068494
#*# 	0.007928, 0.007702, 0.005262, 0.006088, 0.005599, 0.009781, 0.015502, 0.025230, 0.027294, 0.038015, 0.037623, 0.043486, 0.044016, 0.044684, 0.048074, 0.045781, 0.049244, 0.049630, 0.050497, 0.054798, 0.055658, 0.064882, 0.066039, 0.075750, 0.078438
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 150.0
#*# min_y = 20.0
#*# max_y = 160.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.022898, 0.021550, 0.016083, 0.018774, 0.014077, 0.016005, 0.013520, 0.015206, 0.012780, 0.016354, 0.015571, 0.019886, 0.018510, 0.020493, 0.018198, 0.018205, 0.015234, 0.016297, 0.014050, 0.017806, 0.019250, 0.023980, 0.025528, 0.031157, 0.032944
#*# 	  0.016880, 0.017261, 0.012407, 0.013821, 0.009065, 0.010665, 0.007281, 0.009007, 0.006969, 0.010528, 0.010088, 0.015575, 0.012683, 0.016948, 0.013644, 0.014944, 0.010853, 0.011817, 0.009967, 0.014148, 0.015017, 0.021042, 0.022216, 0.028073, 0.029828
#*# 	  0.010829, 0.012623, 0.006276, 0.008980, 0.003508, 0.008140, 0.001005, 0.005129, 0.001733, 0.007278, 0.004876, 0.011927, 0.008678, 0.013997, 0.009412, 0.011358, 0.007263, 0.008893, 0.005965, 0.012035, 0.011885, 0.017990, 0.018744, 0.024344, 0.025324
#*# 	  0.006546, 0.007409, 0.000798, 0.004462, -0.002601, 0.002725, -0.002361, 0.001419, -0.001959, 0.002499, 0.001925, 0.008132, 0.006435, 0.010369, 0.005937, 0.009413, 0.003824, 0.006495, 0.004333, 0.009716, 0.008657, 0.014629, 0.015315, 0.022561, 0.021473
#*# 	  -0.000136, 0.003599, -0.003303, -0.000088, -0.004878, -0.000307, -0.005969, -0.001620, -0.004996, 0.000994, -0.002039, 0.006540, 0.003511, 0.010555, 0.004549, 0.008688, 0.003002, 0.006362, 0.003003, 0.009043, 0.007025, 0.013949, 0.013673, 0.020215, 0.019548
#*# 	  -0.003921, -0.001662, -0.007750, -0.002809, -0.008797, -0.003429, -0.008505, -0.002780, -0.007408, -0.000575, -0.003911, 0.003122, 0.001802, 0.007475, 0.004196, 0.007228, 0.002608, 0.005700, 0.003195, 0.008701, 0.007503, 0.014019, 0.012957, 0.019355, 0.018682
#*# 	  -0.009285, -0.004874, -0.012305, -0.005391, -0.011879, -0.005498, -0.010666, -0.004417, -0.009777, -0.003623, -0.006431, 0.001067, -0.001298, 0.006051, 0.001255, 0.006104, 0.001005, 0.004758, 0.002219, 0.008486, 0.006950, 0.012741, 0.012087, 0.018861, 0.017664
#*# 	  -0.013451, -0.007793, -0.014527, -0.008812, -0.014912, -0.006894, -0.012432, -0.007520, -0.011896, -0.004874, -0.008989, -0.000234, -0.003582, 0.004961, -0.000155, 0.004573, -0.000107, 0.004301, 0.000619, 0.007465, 0.005369, 0.012784, 0.011847, 0.017424, 0.017365
#*# 	  -0.016167, -0.012595, -0.018590, -0.012096, -0.018153, -0.010133, -0.015677, -0.007820, -0.013479, -0.007242, -0.010622, -0.002451, -0.005379, 0.001821, -0.001627, 0.002651, -0.001878, 0.002895, -0.000693, 0.004039, 0.004492, 0.010198, 0.010720, 0.016408, 0.015782
#*# 	  -0.021090, -0.014353, -0.021195, -0.014948, -0.020877, -0.013195, -0.017787, -0.010794, -0.016160, -0.008918, -0.012609, -0.003466, -0.007174, 0.000390, -0.003520, 0.001775, -0.003604, 0.000282, -0.001405, 0.003496, 0.003030, 0.009910, 0.008948, 0.015621, 0.014445
#*# 	  -0.024782, -0.017988, -0.023981, -0.018558, -0.024094, -0.014546, -0.020594, -0.012523, -0.018033, -0.009914, -0.013851, -0.004048, -0.008725, -0.000779, -0.005311, 0.000697, -0.004507, -0.000086, -0.003705, 0.003657, 0.002089, 0.009277, 0.008625, 0.014798, 0.014316
#*# 	  -0.026910, -0.020442, -0.027171, -0.019745, -0.025328, -0.016831, -0.021486, -0.012925, -0.018372, -0.010918, -0.014375, -0.004944, -0.008025, -0.000864, -0.004432, 0.001570, -0.004070, -0.000862, -0.003341, 0.002979, 0.002621, 0.009523, 0.008978, 0.014617, 0.014560
#*# 	  -0.028722, -0.021022, -0.028019, -0.020973, -0.027315, -0.017890, -0.021639, -0.014328, -0.018472, -0.010100, -0.013121, -0.004292, -0.007709, 0.001080, -0.003655, 0.002788, -0.003349, 0.000682, -0.002150, 0.003981, 0.003893, 0.011224, 0.009662, 0.016483, 0.015359
#*# 	  -0.029436, -0.021432, -0.028817, -0.021219, -0.027411, -0.017901, -0.022554, -0.013810, -0.018568, -0.008061, -0.012711, -0.002767, -0.006406, 0.002220, -0.001875, 0.005482, -0.001444, 0.003273, -0.001361, 0.006057, 0.004127, 0.012222, 0.010934, 0.018649, 0.018603
#*# 	  -0.029246, -0.022096, -0.028817, -0.021207, -0.026630, -0.017693, -0.022421, -0.012585, -0.017186, -0.008718, -0.011402, -0.001944, -0.004253, 0.004971, 0.000802, 0.007452, 0.001378, 0.004305, 0.001065, 0.007081, 0.006135, 0.014184, 0.013492, 0.020826, 0.020955
#*# 	  -0.030274, -0.021978, -0.028348, -0.021082, -0.027208, -0.018440, -0.020630, -0.013324, -0.014756, -0.006303, -0.008417, 0.001235, -0.001564, 0.006915, 0.003250, 0.009081, 0.003802, 0.008559, 0.003029, 0.010014, 0.007536, 0.015200, 0.015489, 0.021569, 0.023505
#*# 	  -0.030674, -0.023857, -0.029686, -0.022724, -0.027369, -0.018544, -0.021214, -0.012264, -0.014877, -0.004660, -0.006572, 0.002488, 0.000253, 0.008539, 0.004582, 0.011630, 0.005845, 0.009936, 0.005419, 0.010880, 0.009845, 0.016365, 0.016444, 0.023140, 0.025321
#*# 	  -0.031916, -0.025478, -0.030322, -0.023987, -0.028749, -0.018720, -0.021053, -0.010758, -0.012298, -0.002485, -0.005049, 0.004226, 0.002038, 0.010674, 0.008123, 0.013266, 0.008436, 0.011731, 0.007935, 0.012942, 0.011813, 0.019795, 0.019976, 0.026708, 0.027685
#*# 	  -0.031685, -0.024998, -0.030000, -0.022680, -0.026539, -0.017987, -0.018947, -0.008845, -0.009223, 0.001131, -0.000214, 0.010278, 0.007598, 0.014634, 0.011865, 0.016995, 0.012536, 0.016790, 0.013015, 0.018465, 0.016920, 0.023690, 0.023370, 0.028827, 0.032161
#*# 	  -0.030542, -0.024497, -0.029342, -0.022377, -0.024984, -0.015558, -0.014461, -0.003688, -0.004020, 0.006027, 0.004578, 0.013282, 0.011614, 0.020497, 0.017131, 0.023519, 0.018530, 0.019615, 0.017113, 0.022073, 0.022427, 0.027870, 0.029066, 0.035012, 0.037551
#*# 	  -0.027276, -0.020719, -0.025774, -0.019169, -0.022913, -0.011411, -0.011032, -0.000366, 0.000809, 0.010226, 0.009655, 0.018890, 0.017011, 0.024919, 0.022294, 0.027224, 0.023117, 0.025112, 0.022441, 0.026479, 0.026213, 0.032073, 0.034258, 0.040118, 0.042330
#*# 	  -0.020585, -0.017056, -0.020820, -0.015078, -0.016720, -0.007586, -0.006557, 0.004200, 0.005793, 0.017485, 0.015604, 0.025173, 0.023764, 0.031145, 0.029470, 0.032549, 0.029291, 0.032386, 0.028587, 0.032760, 0.032820, 0.038644, 0.039797, 0.045866, 0.048607
#*# 	  -0.013965, -0.013080, -0.016447, -0.013348, -0.013145, -0.004124, 0.001567, 0.009581, 0.013196, 0.021701, 0.023973, 0.030200, 0.028964, 0.035861, 0.034854, 0.038059, 0.035844, 0.036063, 0.034381, 0.037698, 0.039627, 0.045276, 0.045629, 0.051776, 0.054844
#*# 	  -0.007673, -0.008115, -0.009845, -0.007924, -0.006741, -0.000954, 0.004737, 0.012929, 0.017976, 0.025505, 0.030357, 0.034466, 0.036651, 0.039684, 0.039951, 0.042210, 0.040415, 0.041502, 0.041533, 0.044140, 0.046400, 0.051262, 0.052794, 0.057199, 0.061778
#*# 	  0.001821, -0.000184, -0.001523, -0.000372, 0.000991, 0.005273, 0.012300, 0.018693, 0.023552, 0.031613, 0.036739, 0.040662, 0.043215, 0.045871, 0.046472, 0.047647, 0.047994, 0.047831, 0.048221, 0.050364, 0.054338, 0.058467, 0.060690, 0.066111, 0.070873
#*# x_count = 25
#*# y_count = 25
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 150.0
#*# min_y = 20.0
#*# max_y = 160.0
